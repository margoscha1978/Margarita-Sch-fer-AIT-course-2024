Поток Stream API :
Принцип сортировки и поиска определенных объектов по их характеристике,буквы,цифры чаще всего:
1.создаем поток из источника,например из коллекции ArrayList,HashMap,данные не хранит и не теряет,только обрабатывает...
2.указываем несколько промежуточных операций
  фильтрование filter
  сортировка sorted
  избавление от дубликатов distinct
3.завершить,закрыть поток - терминальная операция
  например создать новую коллекцию collect
  метод collect интерфейс реализуемый внутри нашего листа Stream
4.не меняет коллекцию перестраивает по заданию и возвращает отсортированную коллекцию...

Промежуточные операции :
 возвращает только указанные условиями данные - predicate...
 filter оставляет элементы для которых происходит проверка predicate и возвращает true...

Когда использовать Stream API :
1.источник данных коллекция или объект управляющий или содержащий элементы,объем требующий вычислительной мощности...
2.выполнение преобразований фильтрация,сортировка,mapping(Map преобразует каждый элемент потока в новый вид элементов,
  например считает количество букв или цифр) и другие операции,где String переходит в Integer...
  flatMap брат близнец Map используют при необходимости преобразовать каждый элемент в поток элементов
  и объединить/соединить их в общий поток,затем создать новый лист где они все будут каждый отдельно,
  самостоятельным элементом использовать например Split,нарезает до пробела поток слов на отдельные слова...
  Подходит для ситуаций когда List находится в List или много Lists, в одном много листов...
3.сохранение результата должно быть в новой коллекции или объекте,листе или хранилище...
4.distinct сортирует и отбирает дубликаты с помощью equals и оставляет только уникальные элементы
5.sorted сортирует элементы в естественном порядке: например по алфавиту или с цифрами от меньшего к большему...
6.limit дает шанс ограничить поток первыми элементами,например в списке 20,вы можете вызвать в новый лист только 5,
  своеобразная выборка...

Терминальные операции :
1.collect соберет и упакует все в лист и выполнит роль капсулы...
2.count сообщит количество собранных в поток элементов без подробной информации о них, его тип long
3. MIN/MAX показывает минимальное или максимальное количество элементов по запросу в потоке

Матчинговые(Matching) операции
anaMatch вернет try если есть такой элемент
allMatch  вернет try если все элементы соответствуют try
noneMatch try вернет если не один элемент не соответствует условию


